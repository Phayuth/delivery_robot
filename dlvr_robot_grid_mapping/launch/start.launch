<?xml version="1.0"?>

<launch>
	<param name="use_sim_time" value="true"/>

	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find dlvr_robot_grid_mapping)/rviz/rviz.rviz"/>

	<node name="dlvr_robot_grid_mapping" pkg="dlvr_robot_grid_mapping" type="grid_mapping.py" output="screen">
		<param name="sensor_model_p_occ"        value="0.75"/>
		<param name="sensor_model_p_free"       value="0.45"/> 
		<param name="sensor_model_p_prior"      value="0.5"/> 
		<param name="robot_frame"               value="base_link"/> 
		<param name="map_frame"                 value="map"/> 
		<param name="map_center_x"              value="-1.0"/> 
		<param name="map_center_y"              value="-1.0"/> 
		<param name="map_size_x"                value="45.0"/> 
		<param name="map_size_y"                value="28.0"/> 
		<param name="map_resolution"            value="0.1"/> 
		<param name="map_publish_freq"          value="1.0"/> 
		<param name="update_movement"           value="0.1"/> <!-- update when moved this much -->
	</node>

	<!-- <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 base_link laser 100" /> -->

	<node name="dlvr_robot_laser_sim" pkg="dlvr_robot_laser_sim" type="simulator.py" output="screen">
		<param name="map_file" value="$(find dlvr_robot_laser_sim)/launch/map1.png"/>
		<param name="map_resolution" value="0.05"/> <!-- meters per cell -->
		<param name="time_resolution" value="0.1"/> <!-- time diff between simulator ticks in seconds -->
		<param name="laser_min_angle" value="-135"/> <!-- laser start angle in degrees -->
		<param name="laser_max_angle" value="135"/> <!-- laser end angle in degrees -->
		<param name="laser_resolution" value="1"/> <!-- angle between two laser rays in degrees -->
		<param name="laser_noise_mu" value="0.1"/> <!-- additive normal distribution noise -->
		<param name="laser_noise_sigma" value="0.02"/> <!-- additive normal distribution noise -->
		<param name="laser_max_dist" value="15.0"/> <!-- rays exceeding this value will be converted no NaN -->
		<param name="robot_pos_x" value="2.0"/> <!-- start point -->
		<param name="robot_pos_y" value="2.0"/> <!-- start point -->
		<param name="robot_pos_theta" value="0"/> <!-- start point -->
		<param name="odom_frame" value="map"/> <!-- leave empty for disabling odom publishing -->
		<param name="robot_frame" value="base_link"/> <!-- also modify static_transform_publisher -->
		<param name="laser_frame" value="laser_link"/> <!-- also modify static_transform_publisher -->
	</node>

	<arg
		name="model" />
		<param name="robot_description" textfile="$(find dlvr_robot_description)/urdf/dlvr_robot_description.urdf" />
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />


</launch>